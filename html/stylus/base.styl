@charset 'utf-8'
/* version 1.2.0　2023/10/12 */
@import _definition

// ##### reset.css #####
html
  font-family '游ゴシック', YuGothic, Hiragino Sans, 'ヒラギノ角ゴ ProN W3', 'Hiragino Kaku Gothic Pro', Hiragino Kaku Gothic ProN, 'メイリオ', Meiryo, 'ＭＳ Ｐゴシック', sans-serif
  font-weight normal
  font-size 16px
  color black
  line-height 1.5
  word-break break-word
  -webkit-text-size-adjust 100%

*
:after
:before
  box-sizing border-box

body
div
blockquote
dl
dt
dd
ul
ol
li
h1
h2
h3
h4
h5
h6
hr
form
input
button
figure
figcaption
p
pre
a
time
  margin 0
  padding 0

h1
h2
h3
h4
h5
h6
  font-family inherit
  font-weight inherit
  font-size inherit
  color inherit
  line-height inherit

button
input
optgroup
select
textarea
  padding 0
  color inherit
  line-height inherit

svg
video
canvas
audio
iframe
embed
object
  display block

button
input
optgroup
select
textarea
  margin 0
  font-family inherit
  font-size 100%
  line-height 1.15

img
video
iframe
  max-width 100%

img
  max-width 100%
  height auto
  vertical-align top
  border 0
  border-style none

  &:not([src*='.'])
    display none

b
strong
  font-weight bolder

ol
ul
  list-style none

time
  display block

button
[role='button']
  cursor pointer

table
  border-collapse collapse

  th
    font-weight normal

// ##### default settings #####
.img
  img
    width 100%
    text-align center

.map
  overflow hidden
  padding-top 50%
  position relative

  iframe
    width 100%
    max-width initial
    height 100%
    margin auto
    position absolute
    top 0
    left 0

.youtube
  overflow hidden
  padding-top floor((9 / 16 * 100)%, 4)
  position relative

  &-short
    padding-top floor((16 / 9 * 100)%, 4)

  iframe
    width 100%
    max-width initial
    height 100%
    margin auto
    position absolute
    top 0
    left 0

.iframe
  overflow hidden
  position relative

  iframe
    width 100%
    max-width initial
    margin auto
    position absolute
    top 0
    left 0

a
button
  color inherit
  text-decoration none
  transition .4s ease

  &:hover
    color inherit
    text-decoration none
    opacity .6
    cursor pointer

  &[href*='tel']
    pointer-events none

+tb()
  &[href*='tel']
    pointer-events initial !important

.wrapper
  min-width 375px
  overflow hidden

// inner
for w in range(500, 2000, 100)
  innerWidth = 1000

  if w < innerWidth
    .inner{w}
      width 92%
      max-width unit(w, 'px')

      innerMargin()
  else if w > innerWidth
    .inner{w}
      width 98%
      max-width unit(w, 'px')

      innerMargin()
  else
    .inner
      width 92%

      innerMargin()

      max-width unit(w, 'px')

+tb()
  for w in range(500, 2000, 100)
    innerWidth = 1000

    if w < innerWidth
      .inner{w}
        innerProperty()
    else if w > innerWidth
      .inner{w}
        innerProperty()
        innerMargin()
    else
      .inner
        innerProperty()

// jsで使用するクラス名
.js
  &-toggle
    cursor pointer

// fead
[class*='fead']
  opacity 0

  &.mv
    opacity 1
    transition .5s ease-out

.fead
  &-up
    transform translateY(50px)

    &.mv
      transform translateY(0)

  &-right
    transition 1s
    transform translateX(-20%)

    &.mv
      transform translateX(0)

  &-left
    transition 1s
    transform translateX(20%)

    &.mv
      transform translateX(0)

  &-text
    &.mv
      transition 0s
      transition-delay 0s

    .str
      &.textin
        transition 1s

  &-cover
    position relative

    &::before
      content ''
      width 100%
      height 100%
      display block
      background-color black
      transition .8s
      position absolute
      top 0
      right 0
      z-index 15

    &.mv
      &::before
        width 0
        transition-delay .6s

  &-order
    &>*
      opacity 0
      transform translateY(50px)

      &.mv
        transform translateY(0)

  &-scale
    transition .8s ease-out
    transform scale(1.05)

    &.mv
      transform scale(1)

// up系
.up
  &-clearfix
    display block

    &::before
    &::after
      content ''
      display block
      clear both

  &-over
    &-hidden
      overflow hidden

  &-fs
    &-italic
      font-style italic

  &-td
    &-underline
      text-decoration underline

  &-lst
    &-disc
      list-style-type disc
      padding-left 1em

    &-decimal
      list-style-type decimal
      padding-left 1em

  &-adb
    a
      display block

  &-reader
    &1
      overflow hidden
      text-overflow ellipsis
      white-space nowrap

    &2
      textEllipsis(2em, 2)

    &3
      textEllipsis(3em, 3)

  &-circle
    overflow hidden
    border-radius 100%

// ##### ここからは@tb @spが用意されているクラス名 #####
// up-ofiの基本設定
[class*='up-ofi']
  width 100%
  display block
  position relative

  img
    width 100%
    height 100% !important
    object-fit cover
    object-position 50% 50%

[class*='up-ofi-']
  &::after
    content ''
    display block

  img
    position absolute
    top 0
    left 0

for ofi-percent in range(10, 200, 5)
  .up
    &-ofi
      &-{ofi-percent}
        &::after
          padding-top unit(ofi-percent, '%')

// object-fitのオプション
.up
  &-ob
    &p
      &-c
        img
          object-position center

      &-t
        img
          object-position top

      &-b
        img
          object-position bottom

      &-l
        img
          object-position left

      &-r
        img
          object-position right

    &f
      &-cover
        img
          object-fit cover

      &-contain
        img
          object-fit contain

// up
.up
  &-text
    &-horizontal
      writing-mode horizontal-tb

    &-vertical
      writing-mode vertical-rl

  &d
    &-block
      display block

    &-iblock
      display inline-block

    &-flex
      display flex

    &-grid
      display grid

    &-none
      display none

  &-f
    &-clear
      &-both
        clear both

      &-left
        clear left

      &-right
        clear right

  &-pos
    &-rel
      position relative

    &-abs
      position absolute

    &-fix
      position fixed

    &-static
      position static

  &-c
    &-red
      color red

    &-blue
      color blue

    &-yellow
      color yellow

    &-gray
      color gray

    &-black
      color black

    &-white
      color white

    &-initial
      color initial

    &-inherit
      color inherit

    &-unset
      color unset

    &-revert
      color revert

  &-ta
    &-c
      text-align center

    &-l
      text-align left

    &-r
      text-align right

// z-index
for z in range(0, 5, 1)
  .up
    &-z
      &-{z}
        z-index z

// opacity
for opacity in range(0, 1, .25)
  .up
    &-op
      if opacity == 0
        &-0
          opacity 0
      else if opacity == 1
        &-1
          opacity 1
      else
        &-0\\\.{floor(opacity * 100)}
          opacity opacity

// letter spacing(em)
for ls in range(1, 20, 1)
  .up
    &-ls
      if ls == 10
        &-1em
          letter-spacing unit(1, 'em')
      else if ls == 20
        &-2em
          letter-spacing unit(2, 'em')
      else if ls > 10
        &-1\\\.{ls - 10}em
          letter-spacing floor(unit(ls, 'em') * .1, 1)
      else
        &-0\\\.{ls}em
          letter-spacing floor(unit(ls, 'em') * .1, 1)

// font-size
.up
  &-fz
    for i in range(0, length(unitlist3) - 1)
      if unitlist3[i] == 'px'
        for fz in range(10, 20, 1)
          &-{fz}
            font-size unit(fz, unitlist3[i])

        for fz in range(22, 70, 2)
          &-{fz}
            font-size unit(fz, unitlist3[i])

        for fz in range(90, 150, 20)
          &-{fz}
            font-size unit(fz, unitlist3[i])

        for fz in range(50, 200, 10)
          &-{fz}
            font-size unit(fz, unitlist3[i])
      else if unitlist3[i] == '%'
        for fz in range(50, 200, 10)
          &-{fz}\\{unitlist3[i]}
            font-size unit(fz, unitlist3[i])
      else if unitlist3[i] == 'em'
        for fz in range(1, 10, 1)
          &-{fz}{unitlist3[i]}
            font-size unit(fz, unitlist3[i])

.up
  &-fw
    &-light
      font-weight lighter

    &-normal
      font-weight normal

    &-bold
      font-weight bold

    for fw in range(100, 900, 100)
      &-{fw}
        font-weight fw

// line-height
for lh in range(10, 30, 1)
  .up
    &-lh
      if lh == 10
        &-1
          line-height 1
      else if lh == 20
        &-2
          line-height 2
      else if lh == 30
        &-3
          line-height 3
      else if 10 < lh && (lh < 20)
        &-1\\\.{lh - 10}
          line-height floor((lh * .1), 1)
      else if 20 < lh && (lh < 30)
        &-2\\\.{lh - 20}
          line-height floor((lh * .1), 1)
      else
        &-0\\\.{lh}
          line-height floor((lh * .1), 1)

// flex
.up
  &-fxw
    &-wrap
      flex-wrap wrap

    &-wrapr
      flex-wrap wrap-reverse

    &-nowrap
      flex-wrap nowrap

  &-fxd
    &-row
      flex-direction row

    &-rowr
      flex-direction row-reverse

    &-col
      flex-direction column

    &-colr
      flex-direction column-reverse

  &-even
    &>*
      &:nth-child(even)
        flex-direction row-reverse

  &-odd
    &>*
      &:nth-child(odd)
        flex-direction row-reverse

  &-jc
    &-s
      justify-content start

    &-fs
      justify-content flex-start

    &-e
      justify-content end

    &-fe
      justify-content flex-end

    &-c
      justify-content center

    &-sh
      justify-content stretch

    &-sb
      justify-content space-between

    &-sa
      justify-content space-around

    &-se
      justify-content space-evenly

  &-ai
    &-st
      align-items start

    &-fs
      align-items flex-start

    &-c
      align-items center

    &-e
      align-items end

    &-fe
      align-items flex-end

    &-b
      align-items baseline

    &-sh
      align-items stretch

  &-ac
    &-s
      align-content start

    &-fs
      align-content flex-start

    &-c
      align-content center

    &-e
      align-content end

    &-fe
      align-content flex-end

    &-sh
      align-content stretch

    &-sb
      align-content space-between

    &-sa
      align-content space-around

    &-se
      align-content space-evenly

  &-as
    &-s
      align-self start

    &-fs
      align-self flex-start

    &-c
      align-self center

    &-sh
      align-self stretch

    &-fe
      align-self flex-end

    &-e
      align-self end

    &-auto
      align-self auto

  &-js
    &-s
      justify-self start

    &-e
      justify-self end

    &-c
      justify-self center

    &-sh
      justify-self stretch

  &-fxg
    &-0
      flex-grow 0

    &-1
      flex-grow 1

  &-fxsh
    &-0
      flex-shrink 0

    &-1
      flex-shrink 1

// order
for order in range(0, 10, 1)
  .up
    &-order
      &-{order}
        order order

// width
.up
  &-w
    &-auto
      width auto

    &-min
      width min-content

    &-max
      width max-content

    &-fit
      width fit-content

    for i in range(0, length(unitlist4) - 1)
      if unitlist4[i] == 'px'
        for wid in range(10, 300, 10)
          &-{wid}
            width unit(wid, unitlist4[i])

        for wid in range(350, 1200, 50)
          &-{wid}
            width unit(wid, unitlist4[i])
      else if unitlist4[i] == '%'
        for wid in range(5, 120, 5)
          &-{wid}\\{unitlist4[i]}
            width unit(wid, unitlist4[i])

        &-48\\\%
          width 48%
      else if unitlist4[i] == 'vw'
        for wid in range(10, 100, 10)
          &-{wid}{unitlist4[i]}
            width unit(wid, unitlist4[i])

// min-width(px)
.up
  &-minw
    &-auto
      min-width auto

    for i in range(0, length(unitlist4) - 1)
      if unitlist4[i] == 'px'
        for wid in range(20, 500, 10)
          &-{wid}
            width unit(wid, unitlist4[i])
      else if unitlist4[i] == '%'
        for wid in range(5, 100, 5)
          &-{wid}\\{unitlist4[i]}
            width unit(wid, unitlist4[i])

        &-48\\\%
          width 48%
      else if unitlist4[i] == 'vw'
        for wid in range(10, 100, 10)
          &-{wid}{unitlist4[i]}
            width unit(wid, unitlist4[i])

// max-width(px)
.up
  &-maxw
    for i in range(0, length(unitlist4) - 1)
      if unitlist4[i] == 'px'
        for wid in range(50, 1200, 50)
          &-{wid}
            width unit(wid, unitlist4[i])
      else if unitlist4[i] == '%'
        for wid in range(5, 100, 5)
          &-{wid}\\{unitlist4[i]}
            width unit(wid, unitlist4[i])

        &-48\\\%
          width 48%
      else if unitlist4[i] == 'vw'
        for wid in range(10, 100, 10)
          &-{wid}{unitlist4[i]}
            width unit(wid, unitlist4[i])

// height(px)
.up
  &-h
    &-auto
      height auto

    for i in range(0, length(unitlist5) - 1)
      if unitlist5[i] == 'px'
        for hei in range(50, 1000, 50)
          &-{hei}
            width unit(hei, unitlist5[i])
      else if unitlist5[i] == '%'
        for hei in range(5, 100, 5)
          &-{hei}\\{unitlist5[i]}
            width unit(hei, unitlist5[i])

        &-48\\\%
          width 48%
      else if unitlist5[i] == 'vw'
        for hei in range(10, 100, 10)
          &-{hei}{unitlist5[i]}
            width unit(hei, unitlist5[i])

// margin padding
.up
  &-m
    &-auto
      margin auto

    &l
      &-auto
        margin-left auto

    &r
      &-auto
        margin-right auto

    &x
      &-auto
        margin-left auto
        margin-right auto

spaces(0, 50, 5, 'px')
spaces_unit_em(1, 4, 1, 'em')
spaces_unit_em(5, 50, 5, 'em')
spaces_unit_percent(5, 50, 5, '%')
spaces(60, 100, 5, 'px')
spaces_unit_percent(60, 100, 5, '%')

// up-col
[class*='up-col-']
  display flex
  flex-wrap wrap

for col-num in range(1, 10, 1)
  .up
    &-col
      &-{col-num}
        &>*
          width ceil((100% / col-num), 3)

// gapx gapy(margin padding)(px)
for gap_px in range(0, 100, 10)
  .up
    &-gap
      &x-{gap_px}
        margin-left unit((-(gap_px / 2)), 'px')
        margin-right unit((-(gap_px / 2)), 'px')

        &>*
          padding-left unit(ceil((gap_px / 2), 3), 'px')
          padding-right unit(ceil((gap_px / 2), 3), 'px')

      &y-{gap_px}
        &>*
          padding-bottom gapy-px px

// gap(column-gap row-gap)(px)
for gap_gap in range(0, 100, 5)
  .up
    &-gap
      &-{gap_gap}
        gap unit(gap_gap, 'px')

      &-col
        &-{gap_gap}
          column-gap unit(gap_gap, 'px')

      &-row
        &-{gap_gap}
          row-gap unit(gap_gap, 'px')

/* 表示・非表示 */
.up
  &-show
    display block

  &-hide
    display none

  /* レスポンシブ改行 */

.break
  &-pc
    display block

    &-tb
      display block

      &-sp
        display block

    &-sp
      display block

  &-tb
    display none

    &-sp
      display none

  &-sp
    display none

+tb()
  /* 表示・非表示 */
  .up-show{tb}
    display block

  .up-hide\\\@tb
    display none

  .break
    &-pc
      display none

      &-sp
        display none

    &-tb
      display block

      &-sp
        display block

+sp()
  /* 表示・非表示 */
  .up-show\\\@sp
    display block

  .up-hide\\\@sp
    display none

  .break
  &-pc
    &-sp
      display block

  &-sp
    display block